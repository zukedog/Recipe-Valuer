CREATE TABLE Supplier (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(64) NOT NULL
);

CREATE TABLE Ingredient (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(64) NOT NULL,
    defaultSupplier INT,
    category VARCHAR(64),
    FOREIGN KEY (defaultSupplier)
        REFERENCES Supplier(id),
    UNIQUE (name)
);

CREATE TABLE IngredientUnit (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(64) NOT NULL,
    ingredientId INT,
    qtyPerPrimaryUnit INT,
    FOREIGN KEY (ingredientId)
        REFERENCES Ingredient(id),
    CONSTRAINT U_NamePerIngredient
        UNIQUE (name, ingredientId)
);

CREATE TABLE Purchase (
    id INT AUTO_INCREMENT PRIMARY KEY,
    supplierId INT,
    ingredientId INT,
    costCents INT,
    purchaseKg DOUBLE,
    expired BOOL,
    dateChanged DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (supplierId)
        REFERENCES Supplier(id),
    FOREIGN KEY (ingredientId)
        REFERENCES Ingredient(id)
);

CREATE TABLE Recipe (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(64) NOT NULL,
    type VARCHAR(64) NOT NULL DEFAULT 'Product',
    qty INT,
    UNIQUE (name)
);

CREATE TABLE RecipeUnit (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(64) NOT NULL,
    recipeId INT,
    qtyPerPrimaryUnit INT,
    FOREIGN KEY (recipeId)
        REFERENCES Recipe(id),
    CONSTRAINT U_NamePerRecipe
        UNIQUE (name, recipeId)
);

CREATE TABLE SubRecipe (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipeID INT,
    subRecipeId INT,
    qty INT,
    unitId INT,
    FOREIGN KEY (recipeId)
        REFERENCES Recipe(id),
    FOREIGN KEY (subRecipeId)
        REFERENCES Recipe(id),
    FOREIGN KEY (unitId)
        REFERENCES RecipeUnit(id)
);

CREATE TABLE RecipeIngredient (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipeID INT,
    ingredientId INT,
    qty INT,
    unitId INT,
    FOREIGN KEY (recipeId)
        REFERENCES Recipe(id),
    FOREIGN KEY (ingredientId)
        REFERENCES Ingredient(id),
    FOREIGN KEY (unitId)
        REFERENCES IngredientUnit(id)
);


DROP TABLE RecipeIngredient;
DROP TABLE SubRecipe;
DROP TABLE RecipeUnit;
DROP TABLE Recipe;
DROP TABLE IngredientUnit;
DROP TABLE Purchase;
DROP TABLE Ingredient;
DROP TABLE Supplier;

-- Add Supplier
INSERT INTO Supplier(name)
VALUES("<SUPPLIER NAME>");

-- List Suppliers
SELECT id, name FROM Supplier;

-- Add Ingredient
INSERT INTO Ingredient(name,defaultSupplier,category)
VALUES("<INGREDIENT NAME>",<SUPPLIER NUMBER>,"<CATEGORY>");

-- List Ingredients
SELECT id, name, category
FROM Ingredient;

-- List Ingredients & Default Supplier
SELECT Ingredient.id, Ingredient.name, Ingredient.category, Ingredient.defaultSupplier, Supplier.name
FROM Ingredient LEFT OUTER JOIN Supplier
ON Ingredient.defaultSupplier=Supplier.id;

-- List Ingredients with Default Supplier (By id)
SELECT id, name, category
FROM Ingredient
WHERE defaultSupplier = <SUPPLIER ID>;

-- List Ingredients with Default Supplier (By name)

SELECT id, name, category
FROM Ingredient
WHERE defaultSupplier in (
    SELECT id
    FROM Supplier
    WHERE name = "<SUPPLIER NAME>");

-- Add Supplier
INSERT INTO (name)
VALUES("<SUPPLIER NAME>");
